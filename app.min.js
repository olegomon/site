!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},r.name);t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return D(e.substr(6));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], [], false, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
!function(e){function r(e,r){for(var n=e.split(".");n.length;)r=r[n.shift()];return r}function n(n){if("string"==typeof n)return r(n,e);if(!(n instanceof Array))throw new Error("Global exports must be a string or array.");for(var t={},o=!0,f=0;f<n.length;f++){var i=r(n[f],e);o&&(t["default"]=i,o=!1),t[n[f].split(".").pop()]=i}return t}function t(r){if(Object.keys)Object.keys(e).forEach(r);else for(var n in e)a.call(e,n)&&r(n)}function o(r){t(function(n){if(-1==l.call(s,n)){try{var t=e[n]}catch(o){s.push(n)}r(n,t)}})}var f,i=$__System,a=Object.prototype.hasOwnProperty,l=Array.prototype.indexOf||function(e){for(var r=0,n=this.length;n>r;r++)if(this[r]===e)return r;return-1},s=["_g","sessionStorage","localStorage","clipboardData","frames","frameElement","external","mozAnimationStartTime","webkitStorageInfo","webkitIndexedDB","mozInnerScreenY","mozInnerScreenX"];i.set("@@global-helpers",i.newModule({prepareGlobal:function(r,t,i){var a=e.define;e.define=void 0;var l;if(i){l={};for(var s in i)l[s]=e[s],e[s]=i[s]}return t||(f={},o(function(e,r){f[e]=r})),function(){var r;if(t)r=n(t);else{r={};var i,s;o(function(e,n){f[e]!==n&&"undefined"!=typeof n&&(r[e]=n,"undefined"!=typeof i?s||i===n||(s=!0):i=n)}),r=s?r:i}if(l)for(var u in l)e[u]=l[u];return e.define=a,r}}}))}("undefined"!=typeof self?self:global);
$__System.registerDynamic("2", [], false, function($__require, $__exports, $__module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal($__module.id, null, null);
  (function() {
    (function() {
      NodeList.prototype.forEach = Array.prototype.forEach;
      HTMLCollection.prototype.forEach = Array.prototype.forEach;
      if (!Array.prototype.filter) {
        Array.prototype.filter = function(fun) {
          'use strict';
          if (this === void 0 || this === null) {
            throw new TypeError();
          }
          var t = Object(this);
          var len = t.length >>> 0;
          if (typeof fun !== 'function') {
            throw new TypeError();
          }
          var res = [];
          var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
          for (var i = 0; i < len; i++) {
            if (i in t) {
              var val = t[i];
              if (fun.call(thisArg, val, i, t)) {
                res.push(val);
              }
            }
          }
          return res;
        };
      }
    })();
  })();
  return _retrieveGlobal();
});

$__System.register('3', ['4', '5', '6', '7'], function (_export) {
    var DOM, Query, _createClass, _classCallCheck, NavMenu;

    return {
        setters: [function (_3) {
            DOM = _3['default'];
        }, function (_4) {
            Query = _4['default'];
        }, function (_) {
            _createClass = _['default'];
        }, function (_2) {
            _classCallCheck = _2['default'];
        }],
        execute: function () {
            'use strict';

            NavMenu = (function () {
                function NavMenu(options) {
                    _classCallCheck(this, NavMenu);

                    this.el = options.el;
                    this.isSticky = false;
                    this.init();
                }

                _createClass(NavMenu, [{
                    key: 'init',
                    value: function init() {

                        //var menuList = Query.className('menu-list').item(0);
                        //var activeItem = Query.className('menu-item').item(0);
                        //activeItem.classList.add('active');

                        //var hammertime = new Hammer(menuList);
                        //hammertime.on('tap', (touch) => {
                        //    touch.srcEvent.stopPropagation();
                        //
                        //    var tappedItem = touch.target;
                        //
                        //    if(menuList === tappedItem) {
                        //        return; // user clicked on the menu-list element
                        //    }
                        //
                        //    while (!tappedItem.classList.contains('menu-item')) {
                        //        tappedItem = tappedItem.parentNode;
                        //    }
                        //
                        //    // if the click event happened on a menu-item and
                        //    // not on the previously selected item
                        //    if (tappedItem !== activeItem) {
                        //        activeItem.classList.toggle('active');
                        //        tappedItem.classList.toggle('active');
                        //        activeItem = tappedItem;
                        //    }
                        //});
                    }
                }, {
                    key: 'element',
                    get: function get() {
                        return this.el;
                    }
                }, {
                    key: 'height',
                    get: function get() {
                        return DOM.getElementHeight(this.el);
                    }
                }, {
                    key: 'sticky',
                    get: function get() {
                        return this.isSticky;
                    },
                    set: function set(sticky) {
                        this.isSticky = sticky;
                        if (sticky === true) {
                            this.el.classList.add('sticky');
                        } else {
                            this.el.classList.remove('sticky');
                        }
                    }
                }, {
                    key: 'toggle',
                    get: function get() {
                        this.isSticky = !this.isSticky;
                        this.el.classList.toggle('sticky');
                    }
                }]);

                return NavMenu;
            })();

            _export('default', NavMenu);
        }
    };
});
$__System.register('8', ['3', '4', '5', '6', '7', '9'], function (_export) {
    var NavMenu, DOM, Query, _createClass, _classCallCheck, Instagram, Header;

    return {
        setters: [function (_6) {
            NavMenu = _6['default'];
        }, function (_3) {
            DOM = _3['default'];
        }, function (_4) {
            Query = _4['default'];
        }, function (_) {
            _createClass = _['default'];
        }, function (_2) {
            _classCallCheck = _2['default'];
        }, function (_5) {
            Instagram = _5['default'];
        }],
        execute: function () {
            'use strict';

            Header = (function () {
                function Header(options) {
                    _classCallCheck(this, Header);

                    this.el = options.el;
                    this.sticky = false;
                    var navEl = Query.css('nav').item(0);
                    this.nav = new NavMenu({ el: navEl });
                    this.init();
                }

                _createClass(Header, [{
                    key: 'init',
                    value: function init() {
                        var nav = this.nav;
                        var header = Query.css('header-wrapper').item(0);
                        var headerHeight = DOM.getElementHeight(header);

                        window.addEventListener('resize', function () {
                            headerHeight = DOM.getElementHeight(header);
                        });

                        window.addEventListener('scroll', function () {
                            var scrollY = window.scrollY;
                            if (scrollY >= headerHeight && !nav.sticky) {
                                nav.sticky = true;
                            }
                            if (scrollY >= 0 && scrollY < headerHeight && nav.sticky) {
                                nav.sticky = false;
                            }
                        });
                    }
                }, {
                    key: 'dimensions',
                    get: function get() {
                        return DOM.getElementDimensions(this.el);
                    }
                }, {
                    key: 'height',
                    get: function get() {
                        return DOM.getElementHeight(this.el);
                    }
                }, {
                    key: 'width',
                    get: function get() {
                        return DOM.getElementWidth(this.el);
                    }
                }, {
                    key: 'element',
                    get: function get() {
                        return this.el;
                    }
                }]);

                return Header;
            })();

            _export('default', Header);
        }
    };
});
$__System.registerDynamic("a", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  "format cjs";
  (function() {
    var Instafeed;
    Instafeed = (function() {
      function Instafeed(params, context) {
        var option,
            value;
        this.options = {
          target: 'instafeed',
          get: 'popular',
          resolution: 'thumbnail',
          sortBy: 'none',
          links: true,
          mock: false,
          useHttp: false
        };
        if (typeof params === 'object') {
          for (option in params) {
            value = params[option];
            this.options[option] = value;
          }
        }
        this.context = context != null ? context : this;
        this.unique = this._genKey();
      }
      Instafeed.prototype.hasNext = function() {
        return typeof this.context.nextUrl === 'string' && this.context.nextUrl.length > 0;
      };
      Instafeed.prototype.next = function() {
        if (!this.hasNext()) {
          return false;
        }
        return this.run(this.context.nextUrl);
      };
      Instafeed.prototype.run = function(url) {
        var header,
            instanceName,
            script;
        if (typeof this.options.clientId !== 'string') {
          if (typeof this.options.accessToken !== 'string') {
            throw new Error("Missing clientId or accessToken.");
          }
        }
        if (typeof this.options.accessToken !== 'string') {
          if (typeof this.options.clientId !== 'string') {
            throw new Error("Missing clientId or accessToken.");
          }
        }
        if ((this.options.before != null) && typeof this.options.before === 'function') {
          this.options.before.call(this);
        }
        if (typeof document !== "undefined" && document !== null) {
          script = document.createElement('script');
          script.id = 'instafeed-fetcher';
          script.src = url || this._buildUrl();
          header = document.getElementsByTagName('head');
          header[0].appendChild(script);
          instanceName = "instafeedCache" + this.unique;
          window[instanceName] = new Instafeed(this.options, this);
          window[instanceName].unique = this.unique;
        }
        return true;
      };
      Instafeed.prototype.parse = function(response) {
        var anchor,
            childNodeCount,
            childNodeIndex,
            childNodesArr,
            e,
            eMsg,
            fragment,
            header,
            htmlString,
            httpProtocol,
            i,
            image,
            imageObj,
            imageString,
            imageUrl,
            images,
            img,
            imgHeight,
            imgOrient,
            imgUrl,
            imgWidth,
            instanceName,
            j,
            k,
            len,
            len1,
            len2,
            node,
            parsedLimit,
            reverse,
            sortSettings,
            targetEl,
            tmpEl;
        if (typeof response !== 'object') {
          if ((this.options.error != null) && typeof this.options.error === 'function') {
            this.options.error.call(this, 'Invalid JSON data');
            return false;
          } else {
            throw new Error('Invalid JSON response');
          }
        }
        if (response.meta.code !== 200) {
          if ((this.options.error != null) && typeof this.options.error === 'function') {
            this.options.error.call(this, response.meta.error_message);
            return false;
          } else {
            throw new Error("Error from Instagram: " + response.meta.error_message);
          }
        }
        if (response.data.length === 0) {
          if ((this.options.error != null) && typeof this.options.error === 'function') {
            this.options.error.call(this, 'No images were returned from Instagram');
            return false;
          } else {
            throw new Error('No images were returned from Instagram');
          }
        }
        if ((this.options.success != null) && typeof this.options.success === 'function') {
          this.options.success.call(this, response);
        }
        this.context.nextUrl = '';
        if (response.pagination != null) {
          this.context.nextUrl = response.pagination.next_url;
        }
        if (this.options.sortBy !== 'none') {
          if (this.options.sortBy === 'random') {
            sortSettings = ['', 'random'];
          } else {
            sortSettings = this.options.sortBy.split('-');
          }
          reverse = sortSettings[0] === 'least' ? true : false;
          switch (sortSettings[1]) {
            case 'random':
              response.data.sort(function() {
                return 0.5 - Math.random();
              });
              break;
            case 'recent':
              response.data = this._sortBy(response.data, 'created_time', reverse);
              break;
            case 'liked':
              response.data = this._sortBy(response.data, 'likes.count', reverse);
              break;
            case 'commented':
              response.data = this._sortBy(response.data, 'comments.count', reverse);
              break;
            default:
              throw new Error("Invalid option for sortBy: '" + this.options.sortBy + "'.");
          }
        }
        if ((typeof document !== "undefined" && document !== null) && this.options.mock === false) {
          images = response.data;
          parsedLimit = parseInt(this.options.limit, 10);
          if ((this.options.limit != null) && images.length > parsedLimit) {
            images = images.slice(0, parsedLimit);
          }
          fragment = document.createDocumentFragment();
          if ((this.options.filter != null) && typeof this.options.filter === 'function') {
            images = this._filter(images, this.options.filter);
          }
          if ((this.options.template != null) && typeof this.options.template === 'string') {
            htmlString = '';
            imageString = '';
            imgUrl = '';
            tmpEl = document.createElement('div');
            for (i = 0, len = images.length; i < len; i++) {
              image = images[i];
              imageObj = image.images[this.options.resolution];
              if (typeof imageObj !== 'object') {
                eMsg = "No image found for resolution: " + this.options.resolution + ".";
                throw new Error(eMsg);
              }
              imgWidth = imageObj.width;
              imgHeight = imageObj.height;
              imgOrient = "square";
              if (imgWidth > imgHeight) {
                imgOrient = "landscape";
              }
              if (imgWidth < imgHeight) {
                imgOrient = "portrait";
              }
              imageUrl = imageObj.url;
              httpProtocol = window.location.protocol.indexOf("http") >= 0;
              if (httpProtocol && !this.options.useHttp) {
                imageUrl = imageUrl.replace(/https?:\/\//, '//');
              }
              imageString = this._makeTemplate(this.options.template, {
                model: image,
                id: image.id,
                link: image.link,
                type: image.type,
                image: imageUrl,
                width: imgWidth,
                height: imgHeight,
                orientation: imgOrient,
                caption: this._getObjectProperty(image, 'caption.text'),
                likes: image.likes.count,
                comments: image.comments.count,
                location: this._getObjectProperty(image, 'location.name')
              });
              htmlString += imageString;
            }
            tmpEl.innerHTML = htmlString;
            childNodesArr = [];
            childNodeIndex = 0;
            childNodeCount = tmpEl.childNodes.length;
            while (childNodeIndex < childNodeCount) {
              childNodesArr.push(tmpEl.childNodes[childNodeIndex]);
              childNodeIndex += 1;
            }
            for (j = 0, len1 = childNodesArr.length; j < len1; j++) {
              node = childNodesArr[j];
              fragment.appendChild(node);
            }
          } else {
            for (k = 0, len2 = images.length; k < len2; k++) {
              image = images[k];
              img = document.createElement('img');
              imageObj = image.images[this.options.resolution];
              if (typeof imageObj !== 'object') {
                eMsg = "No image found for resolution: " + this.options.resolution + ".";
                throw new Error(eMsg);
              }
              imageUrl = imageObj.url;
              httpProtocol = window.location.protocol.indexOf("http") >= 0;
              if (httpProtocol && !this.options.useHttp) {
                imageUrl = imageUrl.replace(/https?:\/\//, '//');
              }
              img.src = imageUrl;
              if (this.options.links === true) {
                anchor = document.createElement('a');
                anchor.href = image.link;
                anchor.appendChild(img);
                fragment.appendChild(anchor);
              } else {
                fragment.appendChild(img);
              }
            }
          }
          targetEl = this.options.target;
          if (typeof targetEl === 'string') {
            targetEl = document.getElementById(targetEl);
          }
          if (targetEl == null) {
            eMsg = "No element with id=\"" + this.options.target + "\" on page.";
            throw new Error(eMsg);
          }
          targetEl.appendChild(fragment);
          header = document.getElementsByTagName('head')[0];
          header.removeChild(document.getElementById('instafeed-fetcher'));
          instanceName = "instafeedCache" + this.unique;
          window[instanceName] = void 0;
          try {
            delete window[instanceName];
          } catch (_error) {
            e = _error;
          }
        }
        if ((this.options.after != null) && typeof this.options.after === 'function') {
          this.options.after.call(this);
        }
        return true;
      };
      Instafeed.prototype._buildUrl = function() {
        var base,
            endpoint,
            final;
        base = "https://api.instagram.com/v1";
        switch (this.options.get) {
          case "popular":
            endpoint = "media/popular";
            break;
          case "tagged":
            if (!this.options.tagName) {
              throw new Error("No tag name specified. Use the 'tagName' option.");
            }
            endpoint = "tags/" + this.options.tagName + "/media/recent";
            break;
          case "location":
            if (!this.options.locationId) {
              throw new Error("No location specified. Use the 'locationId' option.");
            }
            endpoint = "locations/" + this.options.locationId + "/media/recent";
            break;
          case "user":
            if (!this.options.userId) {
              throw new Error("No user specified. Use the 'userId' option.");
            }
            endpoint = "users/" + this.options.userId + "/media/recent";
            break;
          default:
            throw new Error("Invalid option for get: '" + this.options.get + "'.");
        }
        final = base + "/" + endpoint;
        if (this.options.accessToken != null) {
          final += "?access_token=" + this.options.accessToken;
        } else {
          final += "?client_id=" + this.options.clientId;
        }
        if (this.options.limit != null) {
          final += "&count=" + this.options.limit;
        }
        final += "&callback=instafeedCache" + this.unique + ".parse";
        return final;
      };
      Instafeed.prototype._genKey = function() {
        var S4;
        S4 = function() {
          return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        };
        return "" + (S4()) + (S4()) + (S4()) + (S4());
      };
      Instafeed.prototype._makeTemplate = function(template, data) {
        var output,
            pattern,
            ref,
            varName,
            varValue;
        pattern = /(?:\{{2})([\w\[\]\.]+)(?:\}{2})/;
        output = template;
        while (pattern.test(output)) {
          varName = output.match(pattern)[1];
          varValue = (ref = this._getObjectProperty(data, varName)) != null ? ref : '';
          output = output.replace(pattern, function() {
            return "" + varValue;
          });
        }
        return output;
      };
      Instafeed.prototype._getObjectProperty = function(object, property) {
        var piece,
            pieces;
        property = property.replace(/\[(\w+)\]/g, '.$1');
        pieces = property.split('.');
        while (pieces.length) {
          piece = pieces.shift();
          if ((object != null) && piece in object) {
            object = object[piece];
          } else {
            return null;
          }
        }
        return object;
      };
      Instafeed.prototype._sortBy = function(data, property, reverse) {
        var sorter;
        sorter = function(a, b) {
          var valueA,
              valueB;
          valueA = this._getObjectProperty(a, property);
          valueB = this._getObjectProperty(b, property);
          if (reverse) {
            if (valueA > valueB) {
              return 1;
            } else {
              return -1;
            }
          }
          if (valueA < valueB) {
            return 1;
          } else {
            return -1;
          }
        };
        data.sort(sorter.bind(this));
        return data;
      };
      Instafeed.prototype._filter = function(images, filter) {
        var filteredImages,
            fn,
            i,
            image,
            len;
        filteredImages = [];
        fn = function(image) {
          if (filter(image)) {
            return filteredImages.push(image);
          }
        };
        for (i = 0, len = images.length; i < len; i++) {
          image = images[i];
          fn(image);
        }
        return filteredImages;
      };
      return Instafeed;
    })();
    (function(root, factory) {
      if (typeof define === 'function' && define.amd) {
        return define([], factory);
      } else if (typeof module === 'object' && module.exports) {
        return module.exports = factory();
      } else {
        return root.Instafeed = factory();
      }
    })(this, function() {
      return Instafeed;
    });
  }).call(this);
  return module.exports;
});

$__System.registerDynamic("b", ["a"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('a');
  return module.exports;
});

$__System.registerDynamic("c", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = "<div class=\"grid-item\">\n    <a class=\"image-link\" href=\"{{link}}\" target=\"_blank\"><img src=\"{{image}}\"/></a>\n\n    <div class=\"image-footer\">\n        <div class=\"image-title\">{{caption}}</div>\n        <div class=\"image-text\">\n            <img src=\"assets/images/heart.svg\">\n            <span>{{likes}}</span>\n            <img src=\"assets/images/comment.svg\">\n            <span>{{comments}}</span>\n        </div>\n    </div>\n</div>\n";
  return module.exports;
});

$__System.register("5", ["6", "7"], function (_export) {
    var _createClass, _classCallCheck, Query;

    return {
        setters: [function (_) {
            _createClass = _["default"];
        }, function (_2) {
            _classCallCheck = _2["default"];
        }],
        execute: function () {
            "use strict";

            Query = (function () {
                function Query() {
                    _classCallCheck(this, Query);
                }

                _createClass(Query, null, [{
                    key: "css",
                    value: function css(selector) {
                        var parent = arguments.length <= 1 || arguments[1] === undefined ? document : arguments[1];

                        return parent.querySelectorAll(selector);
                    }
                }, {
                    key: "id",
                    value: function id(_id) {
                        var parent = arguments.length <= 1 || arguments[1] === undefined ? document : arguments[1];

                        return parent.getElementById(_id);
                    }
                }, {
                    key: "className",
                    value: function className(_className) {
                        var parent = arguments.length <= 1 || arguments[1] === undefined ? document : arguments[1];

                        return parent.getElementsByClassName(_className);
                    }
                }]);

                return Query;
            })();

            _export("default", Query);
        }
    };
});
$__System.register('9', ['4', '5', '6', '7', 'b', 'c'], function (_export) {
    var DOM, Query, _createClass, _classCallCheck, Instafeed, template, Instagram;

    return {
        setters: [function (_3) {
            DOM = _3['default'];
        }, function (_4) {
            Query = _4['default'];
        }, function (_) {
            _createClass = _['default'];
        }, function (_2) {
            _classCallCheck = _2['default'];
        }, function (_b) {
            Instafeed = _b['default'];
        }, function (_c) {
            template = _c['default'];
        }],
        execute: function () {
            'use strict';

            Instagram = (function () {
                function Instagram(options) {
                    _classCallCheck(this, Instagram);

                    this.el = options.el;
                    this.template = options.template || template;
                    this.size = options.size || Instagram.LARGE;
                    this.limit = options.limit || 24;
                    this.init();
                }

                // see https://github.com/stevenschobert/instafeed.js

                _createClass(Instagram, [{
                    key: 'init',
                    value: function init() {

                        this.feed = new Instafeed({
                            target: this.el,
                            get: 'tagged',
                            tagName: 'maximheidt',
                            clientId: 'd9ea239bcd20467c8de89a82dbe321e4',
                            resolution: this.size,
                            template: this.template,
                            limit: this.limit
                        });
                    }
                }, {
                    key: 'run',
                    value: function run() {
                        this.feed.run();
                    }
                }]);

                return Instagram;
            })();

            Instagram.SMALL = 'thumbnail';
            Instagram.MEDIUM = 'low_resolution';
            Instagram.LARGE = 'standard_resolution';

            _export('default', Instagram);
        }
    };
});
$__System.registerDynamic("d", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function($) {
    $.FW = false;
    $.path = $.core;
    return $;
  };
  return module.exports;
});

$__System.registerDynamic("e", ["d"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var global = typeof self != 'undefined' ? self : Function('return this')(),
      core = {},
      defineProperty = Object.defineProperty,
      hasOwnProperty = {}.hasOwnProperty,
      ceil = Math.ceil,
      floor = Math.floor,
      max = Math.max,
      min = Math.min;
  var DESC = !!function() {
    try {
      return defineProperty({}, 'a', {get: function() {
          return 2;
        }}).a == 2;
    } catch (e) {}
  }();
  var hide = createDefiner(1);
  function toInteger(it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  }
  function desc(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  }
  function simpleSet(object, key, value) {
    object[key] = value;
    return object;
  }
  function createDefiner(bitmap) {
    return DESC ? function(object, key, value) {
      return $.setDesc(object, key, desc(bitmap, value));
    } : simpleSet;
  }
  function isObject(it) {
    return it !== null && (typeof it == 'object' || typeof it == 'function');
  }
  function isFunction(it) {
    return typeof it == 'function';
  }
  function assertDefined(it) {
    if (it == undefined)
      throw TypeError("Can't call method on  " + it);
    return it;
  }
  var $ = module.exports = $__require('d')({
    g: global,
    core: core,
    html: global.document && document.documentElement,
    isObject: isObject,
    isFunction: isFunction,
    that: function() {
      return this;
    },
    toInteger: toInteger,
    toLength: function(it) {
      return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;
    },
    toIndex: function(index, length) {
      index = toInteger(index);
      return index < 0 ? max(index + length, 0) : min(index, length);
    },
    has: function(it, key) {
      return hasOwnProperty.call(it, key);
    },
    create: Object.create,
    getProto: Object.getPrototypeOf,
    DESC: DESC,
    desc: desc,
    getDesc: Object.getOwnPropertyDescriptor,
    setDesc: defineProperty,
    setDescs: Object.defineProperties,
    getKeys: Object.keys,
    getNames: Object.getOwnPropertyNames,
    getSymbols: Object.getOwnPropertySymbols,
    assertDefined: assertDefined,
    ES5Object: Object,
    toObject: function(it) {
      return $.ES5Object(assertDefined(it));
    },
    hide: hide,
    def: createDefiner(0),
    set: global.Symbol ? simpleSet : hide,
    each: [].forEach
  });
  if (typeof __e != 'undefined')
    __e = core;
  if (typeof __g != 'undefined')
    __g = global;
  return module.exports;
});

$__System.registerDynamic("f", ["e"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var $ = $__require('e');
  module.exports = function defineProperty(it, key, desc) {
    return $.setDesc(it, key, desc);
  };
  return module.exports;
});

$__System.registerDynamic("10", ["f"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('f'),
    __esModule: true
  };
  return module.exports;
});

$__System.registerDynamic("6", ["10"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _Object$defineProperty = $__require('10')["default"];
  exports["default"] = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        _Object$defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports.__esModule = true;
  return module.exports;
});

$__System.registerDynamic("7", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports["default"] = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  exports.__esModule = true;
  return module.exports;
});

$__System.register('4', ['6', '7'], function (_export) {
    var _createClass, _classCallCheck, DOM;

    return {
        setters: [function (_) {
            _createClass = _['default'];
        }, function (_2) {
            _classCallCheck = _2['default'];
        }],
        execute: function () {
            'use strict';

            DOM = (function () {
                function DOM() {
                    _classCallCheck(this, DOM);
                }

                _createClass(DOM, null, [{
                    key: 'fragmentFromString',
                    value: function fragmentFromString(template) {
                        var fragment = document.createDocumentFragment();
                        var temp = document.createElement('div');
                        temp.innerHTML = template;
                        while (temp.firstChild) {
                            fragment.appendChild(temp.firstChild);
                        }
                        return fragment;
                    }
                }, {
                    key: 'getComputedStyle',
                    value: function getComputedStyle(el) {
                        return window.getComputedStyle(el);
                    }
                }, {
                    key: 'getElementHeight',
                    value: function getElementHeight(el) {
                        var margin = DOM.getMargin(DOM.getComputedStyle(el));
                        var marginV = margin.top + margin.bottom;
                        return Math.ceil(el.offsetHeight + marginV);
                    }
                }, {
                    key: 'getMargin',
                    value: function getMargin(style) {
                        var top = parseFloat(style.marginTop);
                        var left = parseFloat(style.marginLeft);
                        var bottom = parseFloat(style.marginBottom);
                        var right = parseFloat(style.marginRight);
                        return { top: top, left: left, bottom: bottom, right: right };
                    }
                }, {
                    key: 'getElementWidth',
                    value: function getElementWidth(el) {
                        var margin = DOM.getMargin(DOM.getComputedStyle(el));
                        var marginH = margin.right + margin.left;
                        return Math.ceil(el.offsetWidth + marginH);
                    }
                }, {
                    key: 'getElementDimensions',
                    value: function getElementDimensions(el) {
                        var margin = DOM.getMargin(getComputedStyle(el));
                        var marginH = margin.left + margin.right;
                        var marginV = margin.top + margin.bottom;
                        var height = Math.ceil(el.offsetHeight + marginV);
                        var width = Math.ceil(el.offsetWidth + marginH);
                        return { width: width, height: height };
                    }
                }]);

                return DOM;
            })();

            _export('default', DOM);
        }
    };
});
$__System.register('11', ['4', '6', '7'], function (_export) {
    var DOM, _createClass, _classCallCheck, YouTube;

    return {
        setters: [function (_3) {
            DOM = _3['default'];
        }, function (_) {
            _createClass = _['default'];
        }, function (_2) {
            _classCallCheck = _2['default'];
        }],
        execute: function () {
            'use strict';

            YouTube = (function () {
                function YouTube(options) {
                    _classCallCheck(this, YouTube);

                    this.el = options.el;
                    this.init();
                }

                _createClass(YouTube, [{
                    key: 'init',
                    value: function init() {
                        //var hammertime = new Hammer(this.el);

                        //hammertime.on('tap', (touch) => {
                        //touch.srcEvent.stopPropagation();
                        //var tappedItem = touch.target;

                        //if(tappedItem.tagName !== 'IFRAME') {
                        //console.log('image');
                        //tappedItem.classList.add('hidden');
                        //}
                        //});
                    }
                }]);

                return YouTube;
            })();

            _export('default', YouTube);
        }
    };
});
$__System.register('12', ['4', '5', '6', '7', '9', '11'], function (_export) {
    var DOM, Query, _createClass, _classCallCheck, Instagram, YouTube, MainView;

    return {
        setters: [function (_3) {
            DOM = _3['default'];
        }, function (_4) {
            Query = _4['default'];
        }, function (_) {
            _createClass = _['default'];
        }, function (_2) {
            _classCallCheck = _2['default'];
        }, function (_5) {
            Instagram = _5['default'];
        }, function (_6) {
            YouTube = _6['default'];
        }],
        execute: function () {
            'use strict';

            MainView = (function () {
                function MainView(options) {
                    _classCallCheck(this, MainView);

                    this.el = options.el;
                    this.init();
                }

                _createClass(MainView, [{
                    key: 'init',
                    value: function init() {
                        var instagram = new Instagram({ el: 'instafeed' });
                        instagram.run();

                        var youtube = new YouTube({
                            el: Query.css('.responsive-video').item(0)
                        });
                    }
                }, {
                    key: 'element',
                    get: function get() {
                        return this.el;
                    }
                }]);

                return MainView;
            })();

            _export('default', MainView);
        }
    };
});
$__System.register('13', ['3', '4', '5', '7', '8', '12'], function (_export) {
    var NavMenu, DOM, Query, _classCallCheck, Header, MainView, Viewport;

    return {
        setters: [function (_4) {
            NavMenu = _4['default'];
        }, function (_3) {
            DOM = _3['default'];
        }, function (_2) {
            Query = _2['default'];
        }, function (_) {
            _classCallCheck = _['default'];
        }, function (_5) {
            Header = _5['default'];
        }, function (_6) {
            MainView = _6['default'];
        }],
        execute: function () {
            'use strict';

            Viewport = function Viewport() {
                _classCallCheck(this, Viewport);

                var views = this.views = {};

                var headerEl = Query.css('header').item(0);
                var mainEl = Query.css('main').item(0);

                views.header = new Header({
                    el: headerEl
                });

                views.main = new MainView({
                    el: mainEl
                });
            };

            _export('default', Viewport);
        }
    };
});
$__System.register('14', ['2', '6', '7', '13'], function (_export) {
    var Polyfill, _createClass, _classCallCheck, Viewport, App;

    return {
        setters: [function (_3) {
            Polyfill = _3['default'];
        }, function (_) {
            _createClass = _['default'];
        }, function (_2) {
            _classCallCheck = _2['default'];
        }, function (_4) {
            Viewport = _4['default'];
        }],
        execute: function () {
            'use strict';

            App = (function () {
                function App() {
                    _classCallCheck(this, App);
                }

                _createClass(App, null, [{
                    key: 'run',
                    value: function run() {
                        var viewport = new Viewport();
                    }
                }]);

                return App;
            })();

            _export('default', App);
        }
    };
});
$__System.register('1', ['14'], function (_export) {
  'use strict';

  var App;
  return {
    setters: [function (_) {
      App = _['default'];
    }],
    execute: function () {

      App.run();
    }
  };
});
})
(function(factory) {
  factory();
});
//# sourceMappingURL=app.min.js.map